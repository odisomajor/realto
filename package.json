{
  "name": "xillix-realestate",
  "version": "1.0.0",
  "description": "Kenya's premier real estate portal - Xillix.co.ke",
  "private": true,
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:frontend": "cd frontend && npm start",
    "start:backend": "cd backend && npm start",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && npm test",
    "test:integration": "jest --config=jest.integration.config.js",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "lint:fix": "npm run lint:frontend -- --fix && npm run lint:backend -- --fix",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md}\"",
    "clean": "rimraf frontend/.next frontend/out backend/dist node_modules/*/node_modules",
    "setup": "npm install && npm run setup:frontend && npm run setup:backend",
    "setup:frontend": "cd frontend && npm install",
    "setup:backend": "cd backend && npm install",
    "db:migrate": "cd backend && npx prisma migrate dev",
    "db:seed": "cd backend && npx prisma db seed",
    "db:studio": "cd backend && npx prisma studio",
    "db:reset": "cd backend && npx prisma migrate reset",
    "deploy": "npm run build && npm run deploy:production",
    "deploy:staging": "npm run build && ./scripts/deploy-staging.sh",
    "deploy:production": "./scripts/deploy-production.sh",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "backup:db": "./scripts/backup-database.sh",
    "restore:db": "./scripts/restore-database.sh",
    "generate:sitemap": "cd frontend && npm run generate:sitemap",
    "analyze:bundle": "cd frontend && npm run analyze",
    "security:audit": "npm audit --recursive",
    "security:fix": "npm audit fix --recursive",
    "docs:build": "typedoc --out docs/api backend/src",
    "docs:serve": "serve docs/api",
    "health:check": "node scripts/health-check.js",
    "logs:frontend": "pm2 logs frontend",
    "logs:backend": "pm2 logs backend",
    "restart:frontend": "pm2 restart frontend",
    "restart:backend": "pm2 restart backend",
    "stop:all": "pm2 stop all",
    "start:all": "pm2 start ecosystem.config.js"
  },
  "devDependencies": {
    "@types/jest": "^29.5.8",
    "@types/node": "^20.9.0",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.1.0",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "serve": "^14.2.1",
    "ts-jest": "^29.1.1",
    "typedoc": "^0.25.4",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "dotenv": "^16.3.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/xillix-realestate.git"
  },
  "keywords": [
    "real-estate",
    "kenya",
    "property",
    "nextjs",
    "nodejs",
    "postgresql",
    "mobile-app",
    "seo-optimized"
  ],
  "author": {
    "name": "Xillix Team",
    "email": "dev@xillix.co.ke",
    "url": "https://xillix.co.ke"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/your-username/xillix-realestate/issues"
  },
  "homepage": "https://xillix.co.ke",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
